leveneTest(mgr ~ tri, data = mycelium1)
# The p-value of the Levene’s test is > 0.05, suggesting that there is no significant difference between the variances of the two groups.
# T-test - compare the mean of two independent groups
t.test(mgr ~ tri, data = mycelium1)
conidia <- read_excel("data/dat-fitness.xlsx", sheet = "conidia")
conidia1 <- conidia %>%
group_by(experiment, isolate, tri, rep) %>% summarize(spores = mean(conc_spores))
# Summary statistics
conidia1 %>%
group_by(tri) %>%
get_summary_stats(spores, type = "mean_sd")
# Identify outliers by groups
conidia1 %>%
group_by(tri) %>%
identify_outliers(spores) # There were no extreme outliers.
# Check normality by groups
conidia1 %>%
group_by(tri) %>%
shapiro_test(spores) # Data of the two groups are not normally distributed.
ggqqplot(conidia1, x = "spores", facet.by = "tri")
# Check the equality of variances
leveneTest(spores ~ tri, data = conidia1)
# The p-value of the Levene’s test is > 0.05, suggesting that there is no significant difference between the variances of the two groups.
# T-test - compare the mean of two independent groups
t.test(spores ~ tri, data = conidia1)
ascospore <- read_excel("data/dat-fitness.xlsx", sheet = "ascospore")
ascospore1 <- ascospore %>%
group_by(experiment, isolate, tri, location, region, crop, rep) %>% summarize(ascospore = mean(conc_spores))
# Summary statistics
ascospore1 %>%
group_by(tri) %>%
get_summary_stats(ascospore, type = "mean_sd")
# Identify outliers by groups
ascospore1 %>%
group_by(tri) %>%
identify_outliers(ascospore) # There were no extreme outliers.
# Check normality by groups
ascospore1 %>%
group_by(tri) %>%
shapiro_test(ascospore) # Data of the two groups are not normally distributed.
ggqqplot(ascospore1, x = "ascospore", facet.by = "tri")
# Check the equality of variances
leveneTest(ascospore ~ tri, data = ascospore1)
# The p-value of the Levene’s test is > 0.05, suggesting that there is no significant difference between the variances of the two groups.
# T-test - compare the mean of two independent groups
t.test(ascospore ~ tri, data = ascospore1)
peritecia <- read_excel("data/dat-fitness.xlsx", sheet = "perithecia")
peritecia1 = peritecia %>%
gather("Day 3", "Day 6", key = day, value = percentage) %>%
arrange(isolate)
################################# DAY 3 ####################################
day3 <- peritecia1 %>%
filter(day == "Day 3")
# Summary statistics
day3 %>%
group_by(tri) %>%
get_summary_stats(percentage, type = "mean_sd")
day_3_summary <- day3 %>%
group_by(tri, isolate) %>%
get_summary_stats(percentage, type = "mean_sd")
# Identify outliers by groups
day3 %>%
group_by(tri) %>%
identify_outliers(percentage) # The 18SG178iii is an extreme outlier.
# Check normality by groups
day3 %>%
group_by(tri) %>%
shapiro_test(percentage) # Data of the two groups are not normally distributed.
ggqqplot(day3, x = "percentage", facet.by = "tri")
# Check the equality of variances
leveneTest(percentage ~ tri, data = day3)
# The p-value of the Levene’s test is > 0.05, suggesting that there is no significant difference between the variances of the two groups.
# T-test - compare the mean of two independent groups - With outlier
t.test(percentage ~ tri, data = day3)
################################# DAY 6 ####################################
day6 <- peritecia1 %>%
filter(day == "Day 6")
# Summary statistics
day6 %>%
group_by(tri) %>%
get_summary_stats(percentage, type = "mean_sd")
# Identify outliers by groups
day6 %>%
group_by(tri) %>%
identify_outliers(percentage) # There were no extreme outliers.
day_6_summary <- day6 %>%
group_by(tri, isolate) %>%
get_summary_stats(percentage, type = "mean_sd")
# Check normality by groups
day6 %>%
group_by(tri) %>%
shapiro_test(percentage) # Data of the two groups are not normally distributed.
ggqqplot(day6, x = "percentage", facet.by = "tri")
# Check the equality of variances
leveneTest(percentage ~ tri, data = day6)
# The p-value of the Levene’s test is > 0.05, suggesting that there is no significant difference between the variances of the two groups.
# T-test - compare the mean of two independent groups - With outlier
t.test(percentage ~ tri, data = day6)
#### Compare two evaluation days
t.test(percentage ~ day, data = peritecia1)
fungicide <- read_excel("data/dat-fitness.xlsx", sheet = "fungicide")
fungicide1 <- fungicide %>%
mutate(day1 = d1-6,
day2 = d2-6,
mgr =  day2-day1) %>%
group_by(experiment, fungicide, isolate, tri, dose, rep) %>%
summarize(mgr = mean(mgr))
ec50 = estimate_EC50(mgr~dose,
data =fungicide1,
isolate_col = "isolate",
strata_col =  c("tri","fungicide"),
interval = "delta",
fct = LL.4())
ec50 <- ec50 %>%
rename(
isolate = ID)
## Export data
write.csv(ec50, file = "data/ec50.csv")
## Tebuconazole
ec50_teb <- ec50 %>%
filter(fungicide =="Tebuconazole")
ec50_teb %>%
get_summary_stats(Estimate, type = "full")
## 3ADON genotype
teb_3adon <- ec50_teb %>%
filter(tri == "3ADON")
## 15ADON
teb_15adon <- ec50_teb %>%
filter(tri == "15ADON")
## Kolmogorov-Smornov test
#H0 = equal distribution
#H1 = different distributions
ks.test(teb_3adon$Estimate, teb_15adon$Estimate, alternative = "two.side")
## Metconazole
ec50_met <- ec50 %>%
filter(fungicide =="Metconazole")
ec50_met %>%
get_summary_stats(Estimate, type = "full")
## 3ADON genotype
met_3adon <- ec50_met %>%
filter(tri == "3ADON")
## 15ADON
met_15adon <- ec50_met %>%
filter(tri == "15ADON")
## Kolmogorov-Smornov test
#H0 = equal distribution
#H1 = different distributions
ks.test(met_3adon$Estimate, met_15adon$Estimate, alternative = "two.side")
## Compare the two fungicides estimates
ks.test(ec50_teb$Estimate, ec50_met$Estimate, alternative = "two.side")
dat1_mycelium <- mycelium1 %>%
group_by(isolate, tri) %>%
summarise(growth = mean(mgr))
dat1_macroconidia <- conidia1 %>%
group_by(isolate, tri) %>%
summarise(conidia = mean(spores))
dat1_ascospore <- ascospore1 %>%
group_by(isolate, tri) %>%
summarise(ascospore = mean(ascospore))
dat1_perith_1 <- peritecia1  %>%
filter(day == "Day 3") %>%
group_by(isolate, tri) %>%
summarise(perit_day3 = mean(percentage))
dat1_perith_2 <- peritecia1 %>%
filter(day == "Day 6") %>%
group_by(isolate, tri) %>%
summarise(perit_day6 = mean(percentage))
dat1_ec50_teb <- ec50_teb %>%
group_by(isolate, tri) %>%
summarise(ec50_teb = mean(Estimate))
dat1_ec50_met <- ec50_met %>%
group_by(isolate, tri) %>%
summarise(ec50_met = mean(Estimate))
dat_multivar <- dat1_mycelium %>%
left_join(., dat1_macroconidia) %>%
left_join(., dat1_ascospore) %>%
left_join(., dat1_perith_1) %>%
left_join(., dat1_perith_2) %>%
left_join(., dat1_ec50_teb) %>%
left_join(.,dat1_ec50_met) %>%
ungroup()
## Export data
write.csv(dat_multivar, file = "data/dat_multivar.csv")
model <- lm(cbind(growth, conidia, ascospore, perit_day3, perit_day6, ec50_teb, ec50_met) ~ tri, dat_multivar)
Manova(model, test.statistic = "Pillai")
Manova(model, test.statistic = "Wilks")
Manova(model, test.statistic = "Hotelling")
Manova(model, test.statistic = "Roy")
#There was no statistically significant difference between the trichothecene genotype on the combined dependent variables
# Selecting only the dependent variables
dat_multivar_pca <- dat_multivar %>%
select(-isolate) %>%
select(-tri)
res.pca <- PCA(dat_multivar_pca, graph = FALSE)
# Eigenvalues / Variances
## The eigenvalues measure the amount of variation retained by each principal component.
## Eigenvalues are large for the first PCs and small for the subsequent PCs.
eig.val <- get_eigenvalue(res.pca)
eig.val
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 40))
## From the plot below, we might want to stop at the fourth principal component. > 85% of the information (variances) contained in the data are retained by the first four principal components.
var <- get_pca_var(res.pca)
var
# Contributions to the principal components
var$contrib #contains the contributions (in percentage) of the variables to the principal components. The contribution of a variable (var) to a given principal component is (in percentage) : (var.cos2 * 100) / (total cos2 of the component).
# The larger the value of the contribution, the more the variable contributes to the component.
library(corrgram)
library(corrplot)
corr <- dat_multivar %>%
select(-tri) %>%
select(-isolate)
corr1 <- corr %>%
corrgram(lower.panel=panel.cor, upper.panel=panel.conf,
diag.panel=panel.density)
M <- cor(corr1, use = "pairwise.complete.obs")
M
## Combining correlogram with the significance test
# mat : is a matrix of data
# ... : further arguments to pass to the native R cor.test function
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
# matrix of the p-value of the correlation
p.mat <- cor.mtest(M)
corrplot(M, method = "number", type = "upper", p.mat = p.mat, sig.level = 0.01#, insig = "blank"
)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
png(height=2000, width=2500, file="figures/corr1.png", res = 300)
corrplot(M, method="color", col=col(200),
type="upper", #order="hclust",
is.corr = T,
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.05, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE)
dev.off()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(tidyverse)
library(readxl)
library(janitor)
fhb_spe1<- read_excel("data/dat-isolates.xlsx")
## Frequency of genotypes
fhb_spe1 %>%
filter(tri!="NA",
year!="2012") %>%
tabyl(tri)
### 2018
tri_2018 <- fhb_spe1 %>%
filter(year =="2018") %>%
filter(tri!="NA")
tri_2018 %>%
tabyl(location, tri, year)
### 2019
tri_2019 <- fhb_spe1 %>%
filter(year =="2019") %>%
filter(tri!="NA")
tri_2019 %>%
tabyl(location, tri, year)
### 2012
tri_2012 <- fhb_spe1 %>%
filter(year =="2012") %>%
filter(tri!="NA")
tri_2012 %>%
tabyl(year, tri)
tri_year <- fhb_spe1 %>%
filter(tri!="NA",
year!="2012") %>%
tabyl(tri, year)
fisher.test(tri_year, simulate.p.value = TRUE)
# No significant association between trichothecene genotype and year of sampling.
tri_county_2018 <- fhb_spe1 %>%
filter(year == "2018") %>%
filter(tri!="NA") %>%
tabyl(county, tri)
fisher.test(tri_county_2018, simulate.p.value = TRUE)
# Significant association between trichothecene genotype and sampled location in 2018.
tri_county_2019 <- fhb_spe1 %>%
filter(year == "2019") %>%
filter(tri!="NA") %>%
tabyl(county, tri)
fisher.test(tri_county_2019, simulate.p.value = TRUE)
# No significant association between trichothecene genotype and sampled location in 2019.
host_tri_2018 <- fhb_spe1 %>%
filter(year == "2018") %>%
filter(tri!="NA") %>%
tabyl(crop, tri)
chisq.test(host_tri_2018)
fisher.test(host_tri_2018, simulate.p.value = TRUE)
# No significant association between trichothecene genotype and sampled host in 2018.
host_tri_2019 <- fhb_spe1 %>%
filter(year == "2019") %>%
filter(tri!="NA") %>%
tabyl(crop, tri)
fisher.test(host_tri_2019, simulate.p.value = TRUE)
# No significant association between trichothecene genotype and sampled host in 2019.
## Frequency of FGSC members
fhb_spe1 %>%
filter(Fg_16!="NA") %>%
tabyl(Fg_16)
### 2018
spc_2018 <- fhb_spe1 %>%
filter(Fg_16!="NA") %>%
filter(year =="2018")
spc_2018 %>%
tabyl(Fg_16)
### 2019
spc_2019 <- fhb_spe1 %>%
filter(Fg_16!="NA") %>%
filter(year =="2019")
spc_2019 %>%
tabyl(Fg_16)
## TEF gene
fhb_spe1 %>%
filter(year!="2012",
TEF!="NA"  ,
TEF!="Fusarium graminearum",
TEF!="Unidentified") %>%
tabyl(TEF)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(tidyverse)
library(readxl)
library(cowplot)
library(janitor)
fhb_spe1<- read_excel("data/freq_tri.xlsx")
mycelium <- read_excel("data/dat-fitness.xlsx", sheet = "mycelium")
# Removing the mycelium plug area
mycelium["day1"] = mycelium["d1_cm"] -0.283
mycelium["day2"] = mycelium["d2_cm"] -0.283
# Estimating the average radial growth rate (cm2 per day)
mycelium$growth <- (mycelium$day2 - mycelium$day1)
# Summarizing the data
mycelium1 <- mycelium %>%
group_by(experiment, isolate, tri, rep) %>% summarize(mgr = mean(growth))
plot_mycelium <- mycelium1 %>%
group_by(isolate, tri) %>%
summarise(growth = mean(mgr, na.rm = T)) %>%
ggplot(aes(tri, growth))+
geom_boxplot(size = 0.6,
outlier.colour = NA, width=0.3
) +
geom_jitter(size = 1.3, width = 0.1,
alpha=0.6, aes(color=tri))+
facet_grid (~ tri, scales = "free") +
theme_minimal()+
scale_color_manual(breaks = c("15ADON", "3ADON"),  values=c("#1F78B4", "#33A02C"))+
scale_fill_manual(breaks = c("15ADON", "3ADON"),  values=c("white", "white"))+
theme(legend.position = "none",
plot.margin = unit(c(-0.6, 0.1, -0.2, 0.1), "cm"),
legend.margin=margin(0,0,0,0),
legend.box.margin=margin(-0,-10,-10,-10),
panel.grid.major.x = element_blank(),
axis.text.x=element_blank())+
labs(y = expression(paste("Mycelium growth " ~ (cm^2))),
x = "",
title = "",
color = "", fill = "")+
ylim(0, 16)
plot_mycelium
conidia <- read_excel("data/dat-fitness.xlsx", sheet = "conidia")
conidia1 <- conidia %>%
group_by(experiment, isolate, tri, rep) %>% summarize(spores = mean(conc_spores))
plot_conidia <- conidia1 %>%
group_by(isolate, tri) %>%
summarise(conidia = mean(spores, na.rm = T)) %>%
ggplot(aes(tri, conidia)) +
geom_boxplot(size = 0.6,
outlier.colour = NA, width=0.3
) +
geom_jitter(size = 1.3, width = 0.1,
alpha=0.6, aes(color=tri)) +
facet_grid (~ tri, scales = "free") +
theme_minimal() +
scale_color_manual(breaks = c("15ADON", "3ADON"),  values=c("#1F78B4", "#33A02C")) +
scale_fill_manual(breaks = c("15ADON", "3ADON"),  values=c("white", "white")) +
theme(legend.position = "none",
plot.margin = unit(c(-0.6, 0.1, -0.2, 0.1), "cm"),
legend.margin=margin(0,0,0,0),
legend.box.margin=margin(-0,-10,-10,-10),
panel.grid.major.x = element_blank(),
axis.text.x=element_blank())+
labs(y = expression(N.~of~macroconidia~x~10 ^ {3}),
x = "", title = "",
color = "", fill = "")+
ylim(0,60)
plot_conidia
ascospore <- read_excel("data/dat-fitness.xlsx", sheet = "ascospore")
ascospore1 <- ascospore %>%
group_by(experiment, isolate, tri, location, region, crop, rep) %>% summarize(ascospore = mean(conc_spores))
plot_ascospore <- ascospore1 %>%
group_by(isolate, tri) %>%
summarise(ascospore = mean(ascospore, na.rm = T)) %>%
ggplot(aes(tri, ascospore)) +
geom_boxplot(size = 0.6,
outlier.colour = NA, width=0.3,
#position = position_dodge(width = 0.9)
) +
geom_jitter(size = 1.3, width = 0.1,
#position=position_jitterdodge(dodge.width=0.9),
alpha=0.6, aes(color=tri))+
#scale_fill_grey(start = 1, end = 1)+
facet_grid (~ tri, scales = "free") +
theme_minimal()+
scale_color_manual(breaks = c("15ADON", "3ADON"),  values=c("#1F78B4", "#33A02C"))+
scale_fill_manual(breaks = c("15ADON", "3ADON"),  values=c("white", "white"))+
theme(legend.position = "none",
plot.margin = unit(c(-0.6, 0.1, -0.2, 0.1), "cm"),
legend.margin=margin(0,0,0,0),
legend.box.margin=margin(-0,-10,-10,-10),
panel.grid.major.x = element_blank(),
axis.text.x=element_blank())+
labs(y = expression(N.~of~ascospore~x~10 ^ {3}),
x = "", title = "",
color = "", fill = "")+
ylim(0,80)
plot_ascospore
peritecia <- read_excel("data/dat-fitness.xlsx", sheet = "perithecia")
peritecia1 = peritecia %>%
gather("Day 3", "Day 6", key = day, value = percentage) %>%
arrange(isolate)
plot_perithecia <- peritecia1 %>%
group_by(isolate, tri, day) %>%
summarise(percentage = mean(percentage, na.rm = T)) %>%
ggplot(aes(x = day,
y = percentage,
fill = tri)) +
geom_boxplot(size = 0.6,
outlier.colour = NA, width=0.3,
position = position_dodge(width = 0.5)
) +
geom_jitter(position=position_jitterdodge(dodge.width=0.5, jitter.width = 0.1),
size=1.3,
alpha=0.6,
aes(colour=tri)) +
theme_minimal() +
scale_color_manual(breaks = c("15ADON", "3ADON"), values=c("#1F78B4", "#33A02C"))+
scale_fill_manual(breaks = c("15ADON", "3ADON"), values=c("white", "white")) +
labs(y = expression(paste("Perithecia production (%)")),
x = "",
title = "",
color = "", fill = "") +
theme(legend.position = "top",
plot.margin = unit(c(-0.6, 0.1, -0.2, 0.1), "cm"),
legend.margin=margin(0,0,0,0),
legend.box.margin=margin(-0,-10,-10,-10),
panel.grid.major.x = element_blank())
plot_perithecia
grid1 <- plot_grid(plot_mycelium, plot_conidia, plot_ascospore, plot_perithecia, labels=c('A', 'B', 'C', 'D'), align = "hv", ncol=2) +
ggsave("figures/grid1.png",  width=10, height=5, dpi=300)
grid1
fung <- read_csv("data/ec50.csv")
ec50 <- fung %>%
select(-X1)
plot_fungicide <- ec50 %>%
group_by(isolate, tri, fungicide) %>%
summarise(ec50 = mean(Estimate, na.rm = T)) %>%
ggplot(aes(x = ec50, fungicide,  fill = factor(tri))) +
geom_joy(scale = 1.5, alpha = 0.3, rel_min_height = 0.001) +
geom_jitter(alpha=0.5, height = 0.03, size = 1.5, aes(color = factor(tri)))  +
scale_color_manual(breaks = c("3ADON", "15ADON"),  values =  c(alpha("#1F78B4", 0.5), alpha("#33A02C", 0.5))) +
scale_fill_manual(breaks = c("3ADON", "15ADON"), values = c(alpha("#1F78B4", 0.5), alpha("#33A02C", 0.5))) +
scale_y_discrete(expand = c(0.01, 0.15)) +
scale_x_continuous(expand = c(0, 0)) +
theme_minimal() +
theme(legend.position = c(0.8, 1),
#plot.margin = unit(c(0, 0.1, -0.2, 0.1), "cm"),
legend.justification = c("right", "top"),
panel.grid.major.x = element_blank(),
axis.title.x = element_text(hjust=0.5))+
labs(x = (expression(paste('EC'[50], ' (', mu,'g/ml)'))), y = "", fill = "", color = "")
plot_fungicide
dat_multivar <- read_csv("data/dat_multivar.csv") %>%
select(-isolate) %>%
select(-X1)
dat_mul_new <- dat_multivar %>%
rename(Genotype = tri)
# Selecting only the dependent variables
dat_multivar_pca <- dat_multivar %>%
select(-tri)
res.pca <- PCA(dat_multivar_pca, graph = FALSE)
## Graphic
biplot <- fviz_pca_biplot(res.pca,
geom.ind = "point",
fill.ind = dat_mul_new$Genotype, #col.ind = "black",
pointshape = 21,
pointsize = "contrib",
mean.point = FALSE, #remove group mean point
palette = c("#1F78B4", "#33A02C"),
addEllipses = TRUE, #ellipse.type = "confidence",ellipse.level = 0.95,
# Variables
alpha.var ="contrib",
invisible = "var",
)+
scale_color_manual( values=c("#1F78B4", "#33A02C")) +
labs(title = "", fill = "Genotype", color = "Genotype", size = "Contrib.")
biplot
grid2 <- plot_grid(plot_fungicide, biplot, labels=c('A', 'B'), align = "hv") +
ggsave("figures/grid2.png", width=10, height=4, dpi=300)
grid2
rmarkdown::render_site()
